#usda 1.0
(
    doc ="""Generated from node description file OgnSdPostRenderVarDisplayTexture.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_syntheticdata_SdPostRenderVarDisplayTexture" (
        docs="""Synthetic Data node to copy the input aov texture into the corresponding visualization texture"""
    )
    {
        token node:type = "omni.syntheticdata.SdPostRenderVarDisplayTexture"
        int node:typeVersion = 1

        # 24 attributes
        custom float[] inputs:cameraFisheyeParams = [] (
            docs="""Camera fisheye projection parameters"""
        )
        custom int inputs:cameraModel = 0 (
            docs="""Camera model (pinhole or fisheye models)"""
        )
        custom float2 inputs:cameraNearFar = (0.0, 0.0) (
            docs="""Camera near/far clipping range"""
        )
        custom uint inputs:exec (
            docs="""Trigger"""
        )
        custom uint64 inputs:gpu = 0 (
            docs="""Pointer to shared context containing gpu foundations"""
        )
        custom uint64 inputs:instanceMapSDCudaPtr = 0 (
            docs="""cuda uint16_t buffer pointer of size numInstances containing the instance parent semantic index"""
        )
        custom uint64 inputs:instanceMappingInfoSDPtr = 0 (
            docs="""uint buffer pointer containing the following information : [numInstances, minInstanceId, numSemantics, minSemanticId, numProtoSemantic]"""
        )
        custom float inputs:metersPerSceneUnit = 0.0 (
            docs="""Scene units to meters scale"""
        )
        custom token inputs:mode = "autoMode" (
            docs="""Display mode"""
        )
        custom float4 inputs:parameters = (0.0, 5.0, 0.33, 0.27) (
            docs="""Display parameters"""
        )
        custom token inputs:renderVar = "" (
            docs="""Name of the input RenderVar to display"""
        )
        custom token inputs:renderVarDisplay = "" (
            docs="""Name of the output display RenderVar"""
        )
        custom uint64 inputs:rp = 0 (
            docs="""Pointer to render product for this view"""
        )
        custom uint inputs:sdDisplayHeight = 0 (
            docs="""Visualization texture Height"""
        )
        custom uint inputs:sdDisplayWidth = 0 (
            docs="""Visualization texture width"""
        )
        custom uint64 inputs:sdSemBBox3dCamCornersCudaPtr = 0 (
            docs="""Cuda buffer containing the projection of the 3d bounding boxes on the camera plane represented as a float3=(u,v,z,a) for each bounding box corners"""
        )
        custom uint64 inputs:sdSemBBox3dCamExtentCudaPtr = 0 (
            docs="""Cuda buffer containing the 2d extent of the 3d bounding boxes on the camera plane represented as a float6=(u_min,u_max,v_min,v_max,z_min,z_max)"""
        )
        custom uint64 inputs:sdSemBBoxExtentCudaPtr = 0 (
            docs="""Cuda buffer containing the extent of the bounding boxes as a float4=(u_min,v_min,u_max,v_max) for 2D or a float6=(xmin,ymin,zmin,xmax,ymax,zmax) in object space for 3D"""
        )
        custom uint64 inputs:sdSemBBoxInfosCudaPtr = 0 (
            docs="""Cuda buffer containing valid bounding boxes infos"""
        )
        custom uint64 inputs:semanticLabelTokenSDCudaPtr = 0 (
            docs="""cuda uint64_t buffer pointer of size numSemantics containing the semantic label token"""
        )
        custom uint64 inputs:semanticMapSDCudaPtr = 0 (
            docs="""cuda uint16_t buffer pointer of size numSemantics containing the semantic parent semantic index"""
        )
        custom uint64 inputs:semanticPrimTokenSDCudaPtr = 0 (
            docs="""cuda uint64_t buffer pointer of size numSemantics containing the semantic path token"""
        )
        custom uint64 inputs:semanticWorldTransformSDCudaPtr = 0 (
            docs="""cuda float44 buffer pointer of size numSemantics containing the world semantic transform"""
        )
        custom uint64 inputs:swhFrameNumber = 0 (
            docs="""Fabric frame number"""
        )

        # 6 attributes
        custom uint64 outputs:cudaPtr (
            docs="""Display texture CUDA pointer"""
        )
        custom uint outputs:exec (
            docs="""Trigger"""
        )
        custom uint64 outputs:format (
            docs="""Display texture format"""
        )
        custom uint outputs:height (
            docs="""Display texture height"""
        )
        custom token outputs:renderVarDisplay (
            docs="""Name of the output display RenderVar"""
        )
        custom uint outputs:width (
            docs="""Display texture width"""
        )
    }
}
