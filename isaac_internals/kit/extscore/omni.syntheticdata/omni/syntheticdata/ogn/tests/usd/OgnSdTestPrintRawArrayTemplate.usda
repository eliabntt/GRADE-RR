#usda 1.0
(
    doc ="""Generated from node description file OgnSdTestPrintRawArray.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_syntheticdata_SdTestPrintRawArray" (
        docs="""Synthetic Data test node printing the input linear array"""
    )
    {
        token node:type = "omni.syntheticdata.SdTestPrintRawArray"
        int node:typeVersion = 1

        # 14 attributes
        custom uint inputs:bufferSize = 0 (
            docs="""Size (in bytes) of the buffer (0 if the input is a texture)"""
        )
        custom uchar[] inputs:data = [] (
            docs="""Buffer array data"""
        )
        custom int inputs:elementCount = 1 (
            docs="""Number of array element"""
        )
        custom token inputs:elementType = "uint8" (
            docs="""Type of the array element"""
        )
        custom uint inputs:exec (
            docs="""Trigger"""
        )
        custom uint inputs:height = 0 (
            docs="""Height  (0 if the input is a buffer)"""
        )
        custom token inputs:mode = "printFormatted" (
            docs="""Mode in [printFormatted, printReferences, testReferences]"""
        )
        custom int inputs:randomSeed = 0 (
            docs="""Random seed"""
        )
        custom int inputs:referenceNumUniqueRandomValues = 7 (
            docs="""Number of reference unique random values to compare"""
        )
        custom uint[] inputs:referenceSWHFrameNumbers = [11, 17, 29] (
            docs="""Reference swhFrameNumbers relative to the first one"""
        )
        custom float inputs:referenceTolerance = 0.1 (
            docs="""Reference tolerance"""
        )
        custom float[] inputs:referenceValues = [] (
            docs="""Reference data point values"""
        )
        custom uint64 inputs:swhFrameNumber = 0 (
            docs="""Frame number"""
        )
        custom uint inputs:width = 0 (
            docs="""Width  (0 if the input is a buffer)"""
        )

        # 2 attributes
        custom uint outputs:exec (
            docs="""Executes when the event is received"""
        )
        custom uint64 outputs:swhFrameNumber (
            docs="""FrameNumber just rendered"""
        )

        # 1 attribute
        custom int64 state:initialSWHFrameNumber = -1 (
            docs="""Initial swhFrameNumber"""
        )
    }
}
