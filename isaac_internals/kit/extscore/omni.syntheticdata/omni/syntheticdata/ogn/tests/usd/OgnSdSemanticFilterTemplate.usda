#usda 1.0
(
    doc ="""Generated from node description file OgnSdSemanticFilter.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_syntheticdata_SdSemanticFilter" (
        docs="""Synthetic Data node to declare a semantic filter."""
    )
    {
        token node:type = "omni.syntheticdata.SdSemanticFilter"
        int node:typeVersion = 1

        # 5 attributes
        custom uint inputs:exec (
            docs="""Dependency"""
        )
        custom bool inputs:hierarchicalLabels = false (
            docs="""If true the filter consider all labels in the semantic hierarchy above the prims"""
        )
        custom bool inputs:matchingLabels = true (
            docs="""If true output only the labels matching the filter (if false keep all labels of the matching prims)"""
        )
        custom token inputs:name = "" (
            docs="""Filter unique identifier [if empty, use the normalized predicate as an identifier]"""
        )
        custom token inputs:predicate = "" (
            docs="""The semantic filter specification : a disjunctive normal form of semantic type and label"""
        )

        # 3 attributes
        custom uint outputs:exec (
            docs="""Trigger"""
        )
        custom token outputs:name = "" (
            docs="""The semantic filter name identifier"""
        )
        custom token outputs:predicate = "" (
            docs="""The semantic filter predicate in normalized form"""
        )
    }
}
